<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fish.community.demo.mapper.ArticlesMapper">
  <resultMap id="BaseResultMap" type="com.fish.community.demo.model.Articles">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="gmt_create_time" jdbcType="BIGINT" property="gmtCreateTime" />
    <result column="gmt_modified_time" jdbcType="BIGINT" property="gmtModifiedTime" />
    <result column="author" jdbcType="BIGINT" property="author" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="tag" jdbcType="INTEGER" property="tag" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fish.community.demo.model.Articles">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, gmt_create_time, gmt_modified_time, author, view_count, like_count, tag
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.fish.community.demo.model.ArticlesExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from articles
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.fish.community.demo.model.ArticlesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from articles
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from articles
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from articles
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.fish.community.demo.model.ArticlesExample">
    delete from articles
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fish.community.demo.model.Articles">
    insert into articles (id, title, gmt_create_time, 
      gmt_modified_time, author, view_count, 
      like_count, tag, content
      )
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{gmtCreateTime,jdbcType=BIGINT}, 
      #{gmtModifiedTime,jdbcType=BIGINT}, #{author,jdbcType=BIGINT}, #{viewCount,jdbcType=INTEGER}, 
      #{likeCount,jdbcType=INTEGER}, #{tag,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fish.community.demo.model.Articles">
    insert into articles
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="gmtCreateTime != null">
        gmt_create_time,
      </if>
      <if test="gmtModifiedTime != null">
        gmt_modified_time,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="viewCount != null">
        view_count,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreateTime != null">
        #{gmtCreateTime,jdbcType=BIGINT},
      </if>
      <if test="gmtModifiedTime != null">
        #{gmtModifiedTime,jdbcType=BIGINT},
      </if>
      <if test="author != null">
        #{author,jdbcType=BIGINT},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fish.community.demo.model.ArticlesExample" resultType="java.lang.Long">
    select count(*) from articles
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update articles
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreateTime != null">
        gmt_create_time = #{record.gmtCreateTime,jdbcType=BIGINT},
      </if>
      <if test="record.gmtModifiedTime != null">
        gmt_modified_time = #{record.gmtModifiedTime,jdbcType=BIGINT},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=BIGINT},
      </if>
      <if test="record.viewCount != null">
        view_count = #{record.viewCount,jdbcType=INTEGER},
      </if>
      <if test="record.likeCount != null">
        like_count = #{record.likeCount,jdbcType=INTEGER},
      </if>
      <if test="record.tag != null">
        tag = #{record.tag,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update articles
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      gmt_create_time = #{record.gmtCreateTime,jdbcType=BIGINT},
      gmt_modified_time = #{record.gmtModifiedTime,jdbcType=BIGINT},
      author = #{record.author,jdbcType=BIGINT},
      view_count = #{record.viewCount,jdbcType=INTEGER},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      tag = #{record.tag,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update articles
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      gmt_create_time = #{record.gmtCreateTime,jdbcType=BIGINT},
      gmt_modified_time = #{record.gmtModifiedTime,jdbcType=BIGINT},
      author = #{record.author,jdbcType=BIGINT},
      view_count = #{record.viewCount,jdbcType=INTEGER},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      tag = #{record.tag,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fish.community.demo.model.Articles">
    update articles
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreateTime != null">
        gmt_create_time = #{gmtCreateTime,jdbcType=BIGINT},
      </if>
      <if test="gmtModifiedTime != null">
        gmt_modified_time = #{gmtModifiedTime,jdbcType=BIGINT},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=BIGINT},
      </if>
      <if test="viewCount != null">
        view_count = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fish.community.demo.model.Articles">
    update articles
    set title = #{title,jdbcType=VARCHAR},
      gmt_create_time = #{gmtCreateTime,jdbcType=BIGINT},
      gmt_modified_time = #{gmtModifiedTime,jdbcType=BIGINT},
      author = #{author,jdbcType=BIGINT},
      view_count = #{viewCount,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      tag = #{tag,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fish.community.demo.model.Articles">
    update articles
    set title = #{title,jdbcType=VARCHAR},
      gmt_create_time = #{gmtCreateTime,jdbcType=BIGINT},
      gmt_modified_time = #{gmtModifiedTime,jdbcType=BIGINT},
      author = #{author,jdbcType=BIGINT},
      view_count = #{viewCount,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      tag = #{tag,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>